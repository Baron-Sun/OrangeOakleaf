{"ast":null,"code":"import _regeneratorRuntime from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";import _asyncToGenerator from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";import _classCallCheck from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _inherits from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import _createSuper from\"D:\\\\Repos\\\\Projects\\\\test-ebook-2\\\\OrangeOakleaf\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createSuper\";import React,{Fragment}from'react';import{Link}from\"react-router-dom\";import*as BooksAPI from'../../utils/BooksAPI';import'./BookCard.css';var BookItemComponent=/*#__PURE__*/function(_React$Component){_inherits(BookItemComponent,_React$Component);var _super=_createSuper(BookItemComponent);function BookItemComponent(){var _this;_classCallCheck(this,BookItemComponent);_this=_super.call(this);_this.handleChange=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event,bookItem){var title;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:title=event.target.value;_context.next=3;return _this.moveToBookShelf(bookItem,title);case 3:_context.next=5;return _this.props.getBookList();case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x,_x2){return _ref.apply(this,arguments);};}();_this.moveToBookShelf=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(bookItem,title){var data;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return BooksAPI.update(bookItem,title);case 2:data=_context2.sent;case 3:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x3,_x4){return _ref2.apply(this,arguments);};}();_this.state={};return _this;}_createClass(BookItemComponent,[{key:\"render\",value:function render(){var _this$props=this.props,bookItem=_this$props.bookItem,bookList=_this$props.bookList;// ðŸ”§ fix3: The search works correctly when a book does not have a thumbnail or an author. (To test this, try searching for \"poetry\" and \"biography\")  \nvar id=bookItem.id,title=bookItem.title,_bookItem$imageLinks=bookItem.imageLinks,imageLinks=_bookItem$imageLinks===void 0?{}:_bookItem$imageLinks,_bookItem$authors=bookItem.authors,authors=_bookItem$authors===void 0?[]:_bookItem$authors,cover=bookItem.cover,url=bookItem.url;// ðŸ”§ fix4 and fix 6: If a book is assigned to a shelf on the main page and that book appears on the search page, the correct shelf should be selected on the search page.\nvar currentBookItem=bookList.find(function(item){return bookItem.id===item.id;})||bookItem;return/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(Link,{to:{pathname:'iframe',query:{url:url}}},/*#__PURE__*/React.createElement(\"li\",{key:id},/*#__PURE__*/React.createElement(\"div\",{className:\"book\"},/*#__PURE__*/React.createElement(\"div\",{className:\"book-top\"},/*#__PURE__*/React.createElement(\"div\",{className:\"book-cover\",style:{width:128,height:193,backgroundImage:cover?\"url(\".concat(cover,\")\"):''}})),/*#__PURE__*/React.createElement(\"div\",{className:\"book-title\"},title),/*#__PURE__*/React.createElement(\"div\",{className:\"book-authors\"},authors.join())))));}}]);return BookItemComponent;}(React.Component);export default BookItemComponent;","map":{"version":3,"sources":["D:/Repos/Projects/test-ebook-2/OrangeOakleaf/src/components/BookCard/BookCard.js"],"names":["React","Fragment","Link","BooksAPI","BookItemComponent","handleChange","event","bookItem","title","target","value","moveToBookShelf","props","getBookList","update","data","state","bookList","id","imageLinks","authors","cover","url","currentBookItem","find","item","pathname","query","width","height","backgroundImage","join","Component"],"mappings":"q/BACA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,IAAT,KAAqB,kBAArB,CAGA,MAAO,GAAKC,CAAAA,QAAZ,KAA0B,sBAA1B,CACA,MAAO,gBAAP,C,GAEMC,CAAAA,iB,kIACF,4BAAc,mDACV,wBADU,MAOdC,YAPc,0FAOC,iBAAOC,KAAP,CAAcC,QAAd,4HACLC,KADK,CACGF,KAAK,CAACG,MAAN,CAAaC,KADhB,uBAGL,OAAKC,eAAL,CAAqBJ,QAArB,CAA+BC,KAA/B,CAHK,8BAIL,OAAKI,KAAL,CAAWC,WAAX,EAJK,uDAPD,yEAcdF,eAdc,2FAcI,kBAAOJ,QAAP,CAAiBC,KAAjB,sJACGL,CAAAA,QAAQ,CAACW,MAAT,CAAgBP,QAAhB,CAA0BC,KAA1B,CADH,QACVO,IADU,wEAdJ,qEAEV,MAAKC,KAAL,CAAa,EAAb,CAFU,aAKb,C,qEAaQ,iBAC0B,KAAKJ,KAD/B,CACGL,QADH,aACGA,QADH,CACaU,QADb,aACaA,QADb,CAEL;AAFK,GAGGC,CAAAA,EAHH,CAIDX,QAJC,CAGGW,EAHH,CAGOV,KAHP,CAIDD,QAJC,CAGOC,KAHP,sBAIDD,QAJC,CAGcY,UAHd,CAGcA,UAHd,+BAG2B,EAH3B,wCAIDZ,QAJC,CAG+Ba,OAH/B,CAG+BA,OAH/B,4BAGyC,EAHzC,mBAG6CC,KAH7C,CAIDd,QAJC,CAG6Cc,KAH7C,CAGoDC,GAHpD,CAIDf,QAJC,CAGoDe,GAHpD,CAML;AACA,GAAMC,CAAAA,eAAe,CAAGN,QAAQ,CAACO,IAAT,CAAc,SAAAC,IAAI,QAAIlB,CAAAA,QAAQ,CAACW,EAAT,GAAgBO,IAAI,CAACP,EAAzB,EAAlB,GAAkDX,QAA1E,CAEA,mBACI,oBAAC,QAAD,mBACI,oBAAC,IAAD,EAAM,EAAE,CACJ,CACImB,QAAQ,CAAE,QADd,CAEIC,KAAK,CAAE,CACHL,GAAG,CAAEA,GADF,CAFX,CADJ,eAOI,0BAAI,GAAG,CAAEJ,EAAT,eACI,2BAAK,SAAS,CAAC,MAAf,eACI,2BAAK,SAAS,CAAC,UAAf,eACI,2BAAK,SAAS,CAAC,YAAf,CAA4B,KAAK,CAAE,CAAEU,KAAK,CAAE,GAAT,CAAcC,MAAM,CAAE,GAAtB,CAA2BC,eAAe,CAAET,KAAK,eAAUA,KAAV,MAAqB,EAAtE,CAAnC,EADJ,CADJ,cAcI,2BAAK,SAAS,CAAC,YAAf,EAA6Bb,KAA7B,CAdJ,cAeI,2BAAK,SAAS,CAAC,cAAf,EAA+BY,OAAO,CAACW,IAAR,EAA/B,CAfJ,CADJ,CAPJ,CADJ,CADJ,CA+BH,C,+BA3D2B/B,KAAK,CAACgC,S,EA8DtC,cAAe5B,CAAAA,iBAAf","sourcesContent":["\r\nimport React, { Fragment } from 'react'\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\nimport * as BooksAPI from '../../utils/BooksAPI'\r\nimport './BookCard.css'\r\n\r\nclass BookItemComponent extends React.Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n\r\n        }\r\n    }\r\n\r\n    handleChange = async (event, bookItem) => {\r\n        const title = event.target.value;\r\n\r\n        await this.moveToBookShelf(bookItem, title);\r\n        await this.props.getBookList();\r\n    }\r\n\r\n    moveToBookShelf = async (bookItem, title) => {\r\n        let data = await BooksAPI.update(bookItem, title);\r\n    }\r\n\r\n    render() {\r\n        const { bookItem, bookList } = this.props;\r\n        // ðŸ”§ fix3: The search works correctly when a book does not have a thumbnail or an author. (To test this, try searching for \"poetry\" and \"biography\")  \r\n        const { id, title, imageLinks = {}, authors = [], cover, url\r\n        } = bookItem;\r\n\r\n        // ðŸ”§ fix4 and fix 6: If a book is assigned to a shelf on the main page and that book appears on the search page, the correct shelf should be selected on the search page.\r\n        const currentBookItem = bookList.find(item => bookItem.id === item.id) || bookItem;\r\n\r\n        return (\r\n            <Fragment>\r\n                <Link to={\r\n                    {\r\n                        pathname: 'iframe',\r\n                        query: {\r\n                            url: url\r\n                        }\r\n                    }}>\r\n                    <li key={id} >\r\n                        <div className=\"book\">\r\n                            <div className=\"book-top\">\r\n                                <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: cover ? `url(${cover})` : '' }}></div>\r\n                                {/* <div className=\"book-shelf-changer\">\r\n                                {\r\n                                    <select value={currentBookItem.shelf || 'none'} onChange={(e) => this.handleChange(e, bookItem)}>\r\n                                        <option value=\"move\" disabled>Move to...</option>\r\n                                        <option value=\"currentlyReading\">Currently Reading</option>\r\n                                        <option value=\"wantToRead\">Want to Read</option>\r\n                                        <option value=\"read\">Read</option>\r\n                                        <option value=\"none\">None</option>\r\n                                    </select>}\r\n                            </div> */}\r\n                            </div>\r\n                            <div className=\"book-title\">{title}</div>\r\n                            <div className=\"book-authors\">{authors.join()}</div>\r\n                        </div>\r\n                    </li>\r\n                </Link>\r\n\r\n            </Fragment>)\r\n    }\r\n}\r\n\r\nexport default BookItemComponent\r\n"]},"metadata":{},"sourceType":"module"}